rList(N, L) :- rList(N, 0, [], L), !.
rList(N, N, L, L) :- !.
rList(N, CurN, CurL, L) :- CurN1 is CurN + 1, read(X), append(CurL, [X], CurL1),rList(N, CurN1, CurL1, L).

writeList([]):-!.
writeList([H|T]):-write(H),nl,writeList(T).

sum_list_down(List,Sum):- sList(List,0,Sum).
sList([],Sum,Sum):-!.
sList([H|L], CurSum, Sum):- CurSum1 is CurSum+H,sList(L,CurSum1,Sum).

sum_list_up([],0):-!.
sum_list_up([H|L],Sum):-sum_list_up(L,Sum1),Sum is Sum1+H.

min_listUp([MinElem], MinElem):-write("Минимальный элемент"),!.
min_listUp([Head|L], MinElem):- min_listUp(L, TailMinElem),( TailMinElem < Head -> MinElem = TailMinElem; MinElem = Head).

min_list_down(List,MinElem):- min_list_down(List,10000,MinElem).
min_list_down([],MinElem,MinElem):-write("Минимальный элемент"),!.
min_list_down([Head|L],CurM,MinElem):-(Head<CurM -> Min1 is Head;Min1 is CurM),min_list_down(L,Min1,MinElem).

readMinElem:-write("Количество элементов: "),
   read(N),nl,write("Введите элементы списка "),
   rList(N,L),min_list_down(L,MinElem),
   write(MinElem),!.

member_List(X,[X|_]):-!.
member_List(X,[_|T]):-member_List(X,T).

reverse(L,X):-rev(L,[],X).
rev([],X,X):-!.
rev([H|T],CurL,X):-rev(T,H|CurL,X).

match([], _) :- !.
match([SubHead|SubTail], [Head|Tail]) :- (SubHead = Head -> p(SubTail, Tail); match([SubHead|SubTail], Tail)).
